playbook_version: 3.1.5

# ########## Main params ##########
#version
branch: HEAD
git_org: https://github.com/rockstat
dock_no_cache: no
#params
log_level: info
#features
setup_server: yes
setup_nginx: yes
_setup_ssl: yes
_setup_ssl_wildcard: no
setup_jupyter: yes
setup_theia: yes
metrics_server: no
#services
_acmedns_endpoint: auth.0x011.xyz
_acmedns_setup: no
#base
person_name: Aldous Huxley
contact_email: alex@ebalrefuckanal.de
#domains
domain: "{{tracker_domain|default(ansible_host)}}"
domains:
  app: 'app.{{domain}}'
  web: 'web.{{domain}}'
  grafana: 'grafana.{{domain}}'
  jupyter: 'jupyter.{{domain}}'
  theia: 'theia.{{domain}}'
  netdata: 'netdata.{{domain}}'
  httpdebug: 'httpdebug.{{domain}}'
# ########## Logs ##########
#loggly
_loggly_hostname: logs-01.loggly...
_loggly_api_key: 10bbf2d8...
#papertrail
_papertrail_hostname: logs7.pape....
#destination
_logspout_target: "loggly"
_logspout_enabled: no
# ########## SSL ##########
# ssl definition for new wildcard role
_ssl_certs:
  - domain: "{{domain}}"
    wildcard: yes
    email: "{{contact_email}}"
domains_ssl:
  - email: '{{contact_email}}'
    domains: "{{[domain] + domains.values()|list|unique}}"
_ssl_cert_dir: "/etc/letsencrypt/live"
_ssl_cert_fullchain: fullchain.pem
_ssl_cert_trust: chain.pem
_ssl_cert_key: privkey.pem
# ########## Users ##########
#main user. (temp)
main_user: default
main_user_password: default
#system users
support_user: 'x011'
remote_user: 'x011'
#key for update manager to access server
support_key_file: './public_keys/support.pub'
support_key: "{{ lookup('file', support_key_file) }}"
#dirs
home_dir: '/srv/platform'
data_dir: '{{home_dir}}/data'
build_dir: '{{home_dir}}/build'
dirs:
  front_custom_config: "{{data_dir}}/front_custom_config"
  chwriter_custom_config: "{{data_dir}}/chwriter_custom_config"
  chwriter_emergency: "{{data_dir}}/chwriter_emergency"
  band: "{{home_dir}}/images/band_base"
  band_set: "{{home_dir}}/images/band_set"
  rockme_set: "{{home_dir}}/images/rockme_set"
  director_data: "{{data_dir}}/director_data"
  user_images: "{{data_dir}}/images"
  workspace: "{{data_dir}}/workspace"
  notebooks: "{{data_dir}}/notebooks"
  uploads: "{{data_dir}}/uploads"
  grafana_data: "{{home_dir}}/grafana"
  splash: "{{home_dir}}/splash"
  dashboard: "{{home_dir}}/dashboard"
  clickhouse: "/srv/clickhouse"
  clickhouse_tmp: "/srv/clickhouse_tmp"
  redis: "/srv/redis"
  ovpnkeys: "{{home_dir}}/ovpn_keys"
  acmedns: "{{home_dir}}/acmedns"
  acmesh: "{{home_dir}}/acmesh"
  certificates: "{{_ssl_cert_dir}}"
#ports directory
ports:
  # services
  band: [10000, 8080]
  front: [10001, 8080]
  front_ws: [10002, 8082]
  heavyload: [10010, 8080]
  # tools
  director: [10000, 8080]
  grafana: [3000, 3000]
  jupyter: [8888, 8888]
  theia: [8887, 8000]
  netdata: [19999]
  httpdebug: [19992]
  # servers
  http: [80]
  https: [443]
  openvpn: [8080, 1194]
  redis: [6379, 6379]
  s2svpn: [8079]
  clickhouse: [8123]
  chproxy: [9090, 9090]
  chronograf: [18888]
  influxhttp: [18086]
  influxtsb: [4242]
# Mem limits
anaconda_mem_limit: 2g
# ########## Docker ##########
# user defined docker network
docker_net_name: custom
docker_interface: docker1
docker_net_pattern: 172.16.25.* # will be converted to 172.16.25.0/24
docker_users: 
  - '{{support_user}}'
# calculable
docker_net: "{{docker_net_pattern|ip_p2n}}"
docker_host_ip: "{{docker_net|net_gw}}"
docker_netmask: "{{docker_net|ipaddr('netmask')}}"
docker_net_net: "{{docker_net|ipaddr('network')}}"
# default docker network
docker_initnet_pattern: 172.17.*
# short name to access host and possible others
docker_etc_hosts:
  host: "{{if_inner}}"
# other params
docker_band_lbls: {inband: system}
# ########## Clients VPN ##########
covpn_keys_dir: '{{home_dir}}/ovpn_keys'
# ########## Server-server VPN ##########
s2s_vpn_connect: false
s2s_vpn_key: 'ovpn_keys/node{{vpn_id}}.ovpn'
s2s_vpn_net_pattern: 192.168.222.*
s2s_vpn_net: "{{s2s_vpn_net_pattern|ip_p2n}}"
s2s_vpn_host_ip: "{{s2s_vpn_net|net_gw}}"
# ########## Interfaces ##########
if_outer: "{{ansible_default_ipv4.address}}"
if_inner: "{{docker_host_ip}}"
# ########## Firewall ##########
disable_ipv6: true
firewall_rules_base:
  - { from_ip: '{{docker_net}}'}
  - { to_port: '{{ports.http.0}}'}
  - { to_port: '{{ports.https.0}}'}
  - { to_port: '{{ports.openvpn.0}}'}
firewall_rules_acmedns:
  - { to_port: "53", proto: 'udp'}
  - { to_port: "19943" }
  - { to_port: "19980" }
firewall_rules: "{{firewall_rules_base + _acmedns_setup|ternary(firewall_rules_acmedns, [])}}"
# ########## Jupyter/anaconda packages ##########
# default
jup_with_conda_def: ["ujson"]
jup_with_pip_def: ["prodict", "arrow", "simplech", "asimplech"]
# additional
jup_with_conda: [""]
jup_with_pip: [""]
# todo: ability to specify additional packages for theia and others
# ########## ClickHouse ##########
ch_db: stats
# ########## Common Envs ##########
containers_env:
  # **ATTENTION! You have to configure variables at Director's config too!**
  DOMAIN: "{{domain}}"
  HOST_ADDR: "{{if_inner}}"
  STATSD_HOST: "{{if_inner}}"
  LOG_LEVEL: "{{log_level}}"
  JSON_LOGS: 1
  NETWORK: "{{docker_net_name}}"
  REDIS_DSN: "redis://redis:6379"
  CHP_DSN: "http://{{main_user}}:{{main_user_password}}@host:{{ports.chproxy.0}}/{{ch_db}}"
  CH_DSN: "http://{{main_user}}:{{main_user_password}}@host:{{ports.chproxy.0}}/{{ch_db}}"
  CHS_DSN: "http://{{main_user}}@host:{{ports.clickhouse.0}}/{{ch_db}}"
# ########## NGINX COMMONS ##########
# configuration extra params
_nginx_proxy_params_extra: []
_nginx_sites_extra: {}
_nginx_front_extra: []
# common blocks
_nginx_listen: 
  - "listen 443 ssl http2"
_nginx_ssl:
  - ssl_certificate_key     {{_ssl_cert_dir}}/{{domain}}/{{_ssl_cert_key}}
  - ssl_certificate         {{_ssl_cert_dir}}/{{domain}}/{{_ssl_cert_fullchain}}
  - ssl_trusted_certificate {{_ssl_cert_dir}}/{{domain}}/{{_ssl_cert_trust}}
_nginx_nocache:
  - add_header 'Cache-Control' 'no-store; must-revalidate'
  - expires off
_nginx_auth:
  - 'auth_basic "Restricted"'
  - "auth_basic_user_file auth_basic/common"
_nginx_base_vh: "{{ _nginx_listen + _nginx_ssl }}"
# specific configurations
_nginx_forward_vh:
  - server_name {sd}.{{domain}}
  - location / { proxy_pass http://u{sd}; }
  - "{{_nginx_auth}}"
  - "{{_nginx_base_vh}}"
_nginx_defvh_http:
  - server_name _http
  - listen 80 default_server
  - location /stub_status { stub_status; allow 127.0.0.1; deny all; access_log off;}
  - location / { return 301 https://$host$request_uri; }
_nginx_defvh_https:
  - "server_name _https"
  - "{{_nginx_listen.0}} default_server"
  - "{{_nginx_ssl}}"
  - "root {{dirs.splash}}"
  - "location / { try_files $uri $uri/index.html; }"
_nginx_uploader:
  location /upload {
    client_max_body_size 10m;
    client_body_buffer_size 128K; 
    limit_except POST { deny all; }
    proxy_pass http://uheavyload; }
_nginx_frontrier:
  - server_name {{domain}}
  - "{{_nginx_base_vh}}"
  - "root {{dirs.splash}}"
  - location / { try_files $uri $uri/index.html @upstream; }
  - location @upstream { proxy_pass http://ufront; }
  - location /wss { proxy_pass http://ufront_ws; }
  - "{{_nginx_uploader}}"
  - "{{_nginx_front_extra}}"
_nginx_dashboard:
  - server_name app.{{domain}}
  - "{{_nginx_base_vh}}"
  - "{{_nginx_auth}}"
  - "root {{dirs.dashboard}}/dist"
  - location /api/ { proxy_pass http://udirector/; }
  - location / { try_files $uri $uri/index.html; }
_nginx_grafana:
  - server_name grafana.{{domain}}
  - location / { proxy_pass http://ugrafana; }
  - location /public/ { auth_basic off; proxy_pass http://ugrafana; }
  - "{{_nginx_auth}}"
  - "{{_nginx_base_vh}}"
  - proxy_set_header X-WEBAUTH-USER $remote_user
  - proxy_hide_header Authorization
_nginx_sites:
  def_https: "{{_nginx_defvh_https|flatten }}"
  def_http: "{{_nginx_defvh_http|flatten }}"
  front: "{{_nginx_frontrier|flatten }}"
  dashboard: "{{_nginx_dashboard|flatten }}"
  grafana: "{{_nginx_grafana|flatten}}"
  theia: "{{_nginx_forward_vh|flatten|map('replace','{sd}','theia')|list}}"
  jupyter: "{{_nginx_forward_vh|flatten|map('replace','{sd}','jupyter')|list}}"
  netdata: "{{_nginx_forward_vh|flatten|map('replace','{sd}','netdata')|list}}"
  httpdebug: "{{_nginx_forward_vh|flatten|map('replace','{sd}','httpdebug')|list}}"
_nginx_upstreams:
  - 'upstream ufront { server {{if_inner}}:{{ports.front.0}} weight=10; keepalive 32; }'
  - 'upstream ufront_ws { server {{if_inner}}:{{ports.front_ws.0}} weight=10; keepalive 128; }'
  - 'upstream udirector { server {{if_inner}}:{{ports.director.0}} weight=10; keepalive 8; }'
  - 'upstream uheavyload { server {{if_inner}}:{{ports.heavyload.0}} weight=10; keepalive 32; }'
  - 'upstream ugrafana { server {{if_inner}}:{{ports.grafana.0}} weight=10; keepalive 4; }'
  - 'upstream ujupyter { server {{if_inner}}:{{ports.jupyter.0}} weight=10; keepalive 4; }'
  - 'upstream unetdata { server {{if_inner}}:{{ports.netdata.0}} weight=10; keepalive 8; }'
  - 'upstream utheia { server {{if_inner}}:{{ports.theia.0}} weight=10; keepalive 8; }'
  - 'upstream uhttpdebug { server {{if_inner}}:{{ports.httpdebug.0}} weight=10; }'
# ########## CH PROXY ##########
_chproxy_allow_from:
  - "{{docker_net}}"
  - "{{s2s_vpn_net}}"
_chproxy_user_config:
  - allow_cors: true
    to_cluster: 'default'
    to_user: 'default'
    max_concurrent_queries: 2
    max_queue_size: 100
    max_queue_time: 30s
    max_execution_time: 30s
# _chproxy_users:
#   - "{{ {'name': main_user, 'password': main_user_password}|combine(_chproxy_user_config) }}"
# ########## Other things ##########
hostname: "{{inventory_hostname_short|default(inventory_hostname)}}"

# ########## Mailer config ##########
mailer_subj_key: "Ваши ключи OpenVPN ({{ domain }}) v{{ playbook_version }}"
mailer_subj_snip: "Сниппет для сайта ({{ domain }}) v{{ playbook_version }}"


